import streamlit as st

translation = {
    "en_US": {
        "settings": "Settings",
        "select_language": "Select Language",
        "select_algorithm": "Select Algorithm",
        "number_of_algorithm_runs": "Number of Algorithm Runs",
        "common_arguments": "Common Arguments",
        "number_of_waypoints": "Number of Waypoints",
        "max_iterations": "Max Iterations",
        "axis_min_x": "Axis Min X",
        "axis_min_y": "Axis Min Y",
        "axis_min_z": "Axis Min Z",
        "axis_max_x": "Axis Max X",
        "axis_max_y": "Axis Max Y",
        "axis_max_z": "Axis Max Z",
        "random_seed": "Random Seed (0 means None, means that each experiment is completely random)",
        "verbose": "Detailed Console Log (Check this option carefully as it will seriously affect performance)",
        "pso_arguments": "PSO Arguments",
        "number_of_particles": "Number of Particles",
        "inertia_weight": "Inertia Weight",
        "cognitive_weight": "Cognitive Weight",
        "social_weight": "Social Weight",
        "max_velocities": "Max Velocities",
        "max_velocity_x": "Max Velocities X",
        "max_velocity_y": "Max Velocities Y",
        "max_velocity_z": "Max Velocities Z",
        "genetic_arguments": "GA Arguments",
        "population_size": "Population Size",
        "tournament_size": "Tournament Size",
        "crossover_rate": "Crossover Rate",
        "mutation_rate": "Mutation Rate",
        "pso_ga_hybrid_arguments": "PSO-GA Hybrid Arguments",
        "min_inertia_weight": "Min Inertia Weight",
        "max_inertia_weight": "Max Inertia Weight",
        "min_cognitive_weight": "Min Cognitive Weight",
        "max_cognitive_weight": "Max Cognitive Weight",
        "min_social_weight": "Min Social Weight",
        "max_social_weight": "Max Social Weight",
        "code_editor": "Code Editor",
        "terrain_generation_function": "Terrain Generation Function",
        "algorithm_fitness_function": "Algorithm Fitness Function",
        "run_selected_algorithm": "Run Selected Algorithm",
        "run_multiple_algorithms": "One-Click Run Multiple Algorithms",
        "result_visualization": "Experimental Results Visualization",
        "running_algorithm": "Running Algorithm",
        "best_fitness_value_samples": "Best Fitness Value Samples",
        "running_time_samples": "运行时间采样（秒）",
        "max": "Max",
        "min": "Min",
        "avg": "Avg",
        "std": "Std",
        "terrain_and_path": "Terrain and Path",
        "target_path": "Target Path",
        "pso_path": "PSO Path",
        "ga_path": "GA Path",
        "pso_ga_hybrid_path": "PSO-GA Path",
        "terrain": "Terrain",
        "start_point": "Start Point",
        "destination": "Destination",
        "fitness_curve": "Fitness Curve",
        "iterations": "Iterations",
        "fitness": "Fitness",
    },
    "zh_CN": {
        "settings": "设置",
        "select_language": "选择语言",
        "select_algorithm": "选择算法",
        "number_of_algorithm_runs": "实验次数",
        "common_arguments": "公共参数",
        "number_of_waypoints": "路径点数量",
        "max_iterations": "最大迭代次数",
        "axis_min_x": "X轴最小值",
        "axis_min_y": "Y轴最小值",
        "axis_min_z": "Z轴最小值",
        "axis_max_x": "X轴最大值",
        "axis_max_y": "Y轴最大值",
        "axis_max_z": "Z轴最大值",
        "random_seed": "随机种子 (0 表示无，意味着每次实验都是完全随机的)",
        "verbose": "在控制台打印详细日志 (慎重勾选，会严重影响性能)",
        "pso_arguments": "PSO算法参数",
        "number_of_particles": "粒子数量",
        "inertia_weight": "惯性权重",
        "cognitive_weight": "认知权重",
        "social_weight": "社会权重",
        "max_velocities": "最大速度",
        "max_velocity_x": "X轴最大速度",
        "max_velocity_y": "Y轴最大速度",
        "max_velocity_z": "Z轴最大速度",
        "genetic_arguments": "遗传算法参数",
        "population_size": "种群规模",
        "tournament_size": "锦标赛规模",
        "crossover_rate": "交叉率",
        "mutation_rate": "变异率",
        "pso_ga_hybrid_arguments": "PSO-GA混合算法参数",
        "min_inertia_weight": "最小惯性权重",
        "max_inertia_weight": "最大惯性权重",
        "min_cognitive_weight": "最小认知权重",
        "max_cognitive_weight": "最大认知权重",
        "min_social_weight": "最小社会权重",
        "max_social_weight": "最大社会权重",
        "code_editor": "代码编辑器",
        "terrain_generation_function": "地形生成函数",
        "algorithm_fitness_function": "算法适应度函数",
        "run_selected_algorithm": "运行已选中的算法",
        "run_multiple_algorithms": "一键运行多个算法",
        "result_visualization": "实验结果可视化",
        "running_algorithm": "算法正在运行中",
        "best_fitness_value_samples": "最佳适应度值采样",
        "running_time_samples": "运行时间采样（秒）",
        "max": "最大值",
        "min": "最小值",
        "avg": "平均值",
        "std": "标准差",
        "terrain_and_path": "地形和路径",
        "target_path": "目标路径",
        "pso_path": "PSO路径",
        "ga_path": "GA路径",
        "pso_ga_hybrid_path": "PSO-GA路径",
        "terrain": "地形",
        "start_point": "起点",
        "destination": "终点",
        "fitness_curve": "适应度曲线",
        "iterations": "迭代次数",
        "fitness": "适应度值",
    },
}

language_names = {
    "en_US": "English",
    "zh_CN": "简体中文",
}

algorithm_names = {
    "pso_algorithm": {
        "en_US": "PSO",
        "zh_CN": "PSO",
    },
    "genetic_algorithm": {
        "en_US": "Genetic",
        "zh_CN": "Genetic",
    },
    "pso_ga_hybrid_algorithm": {
        "en_US": "PSO-Genetic Hybrid",
        "zh_CN": "PSO-Genetic Hybrid",
    },
}


def translate(key: str) -> str:
    """Get the translation of the given key in the specified language.

    Args:
        key (str): The key to translate.

    Returns:
        str: The translated string.
    """
    return translation[st.session_state.selected_language].get(key, key)
